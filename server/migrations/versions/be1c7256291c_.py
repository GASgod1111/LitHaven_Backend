"""empty message

Revision ID: be1c7256291c
Revises: 
Create Date: 2023-11-07 14:58:09.937151

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'be1c7256291c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('AdminID', sa.Integer(), nullable=False),
    sa.Column('Username', sa.String(length=255), nullable=True),
    sa.Column('Password', sa.String(length=255), nullable=True),
    sa.Column('Email', sa.String(length=255), nullable=True),
    sa.Column('Full_Name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('AdminID')
    )
    op.create_table('book',
    sa.Column('BookID', sa.Integer(), nullable=False),
    sa.Column('Book_Image', sa.String(), nullable=True),
    sa.Column('Title', sa.String(length=255), nullable=True),
    sa.Column('Author', sa.String(length=255), nullable=True),
    sa.Column('Genre', sa.String(length=255), nullable=True),
    sa.Column('Description', sa.String(length=255), nullable=True),
    sa.Column('Price', sa.Float(), nullable=True),
    sa.Column('Date_Uploaded', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('BookID')
    )
    op.create_table('user',
    sa.Column('UserID', sa.Integer(), nullable=False),
    sa.Column('Username', sa.String(length=255), nullable=True),
    sa.Column('Password', sa.String(length=255), nullable=True),
    sa.Column('Email', sa.String(length=255), nullable=True),
    sa.Column('Full_Name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('UserID')
    )
    op.create_table('book_lending_request',
    sa.Column('RequestID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('AdminID', sa.Integer(), nullable=True),
    sa.Column('BookID', sa.Integer(), nullable=True),
    sa.Column('Status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['AdminID'], ['admin.AdminID'], ),
    sa.ForeignKeyConstraint(['BookID'], ['book.BookID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['user.UserID'], ),
    sa.PrimaryKeyConstraint('RequestID')
    )
    op.create_table('book_order',
    sa.Column('OrderID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('AdminID', sa.Integer(), nullable=True),
    sa.Column('BookID', sa.Integer(), nullable=True),
    sa.Column('Status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['AdminID'], ['admin.AdminID'], ),
    sa.ForeignKeyConstraint(['BookID'], ['book.BookID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['user.UserID'], ),
    sa.PrimaryKeyConstraint('OrderID')
    )
    op.create_table('cart',
    sa.Column('CartID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('AdminID', sa.Integer(), nullable=True),
    sa.Column('Status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['AdminID'], ['admin.AdminID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['user.UserID'], ),
    sa.PrimaryKeyConstraint('CartID')
    )
    op.create_table('cart_item',
    sa.Column('CartItemID', sa.Integer(), nullable=False),
    sa.Column('CartID', sa.Integer(), nullable=True),
    sa.Column('BookID', sa.Integer(), nullable=True),
    sa.Column('Quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['BookID'], ['book.BookID'], ),
    sa.ForeignKeyConstraint(['CartID'], ['cart.CartID'], ),
    sa.PrimaryKeyConstraint('CartItemID')
    )
    op.create_table('purchase',
    sa.Column('PurchaseID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('AdminID', sa.Integer(), nullable=True),
    sa.Column('OrderID', sa.Integer(), nullable=True),
    sa.Column('Total_Amount', sa.Float(), nullable=True),
    sa.Column('Purchase_Date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['AdminID'], ['admin.AdminID'], ),
    sa.ForeignKeyConstraint(['OrderID'], ['book_order.OrderID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['user.UserID'], ),
    sa.PrimaryKeyConstraint('PurchaseID')
    )
    op.create_table('return_request',
    sa.Column('RequestID', sa.Integer(), nullable=False),
    sa.Column('UserID', sa.Integer(), nullable=True),
    sa.Column('AdminID', sa.Integer(), nullable=True),
    sa.Column('OrderID', sa.Integer(), nullable=True),
    sa.Column('Return_Reason', sa.String(length=255), nullable=True),
    sa.Column('Status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['AdminID'], ['admin.AdminID'], ),
    sa.ForeignKeyConstraint(['OrderID'], ['book_order.OrderID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['user.UserID'], ),
    sa.PrimaryKeyConstraint('RequestID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('return_request')
    op.drop_table('purchase')
    op.drop_table('cart_item')
    op.drop_table('cart')
    op.drop_table('book_order')
    op.drop_table('book_lending_request')
    op.drop_table('user')
    op.drop_table('book')
    op.drop_table('admin')
    # ### end Alembic commands ###
